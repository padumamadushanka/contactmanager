{"version":3,"sources":["context.js","components/contact/Contact.js","components/contact/Contacts.js","components/layout/TextInputGroup.js","components/contact/AddContact.js","components/contact/EditContact.js","components/layout/Header.js","components/pages/NotFound.js","components/pages/About.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onshowclick","e","onDeleteClick","delete","_this2","className","name","onClick","style","cursor","color","float","bind","react_router_dom","to","marginRight","email","phone","Contacts","contact_Contact","TextInputGroup","_ref","label","onChange","placeholder","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","EditContact","updatedContact","match","params","put","Header","branding","href","NotFound","About","Test","title","body","userId","fetch","then","response","json","App","context_Provider","src","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.17307174.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from \"axios\";\r\nconst Context=React.createContext();\r\nconst reducer=(state,action)=>{\r\n    switch(action.type){\r\n        case 'DELETE_CONTACT':\r\n        return{\r\n            ...state,\r\n            contacts:state.contacts.filter(\r\n                contact=>contact.id !== action.payload\r\n            )\r\n        }\r\n        case 'ADD_CONTACT':\r\n        return{\r\n            ...state,\r\n            contacts:[action.payload,...state.contacts]\r\n        }\r\n        case 'UPDATE_CONTACT':\r\n        return{\r\n            ...state,\r\n            contacts:state.contacts.map(contact=>contact.id === action.payload.id ? (contact=action.payload):contact)\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\nexport class Provider extends Component{\r\n    state={\r\n        contacts:[],\r\n        dispatch:action=>{\r\n            this.setState(state=>reducer(state,action))\r\n        }\r\n    }\r\n    async componentDidMount(){\r\n        const res= await axios.get('https://jsonplaceholder.typicode.com/users')\r\n        this.setState({contacts:res.data})\r\n    };\r\n    //create provider that holds state value to expose consumers\r\n    render(){\r\n        return(\r\n            <Context.Provider value={this.state}>\r\n            {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\nexport const Consumer=Context.Consumer","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Consumer } from \"../../context\";\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\n\r\n class Contact extends Component {\r\n     state={\r\n        showContactInfo:false\r\n     }\r\n     onshowclick=e=>{\r\n       this.setState({showContactInfo:!this.state.showContactInfo})\r\n     }\r\n     onDeleteClick= async (id,dispatch)=>{\r\n      await axios.delete(`https://jsonplaceholder.typicode.com/posts/${id}`);\r\n      dispatch({type:'DELETE_CONTACT',payload:id})\r\n        \r\n     }\r\n  render() {\r\n    const{id}=this.props.contact;\r\n      const {contact}=this.props;//contact object of props coming from contacts.js\r\n      const {showContactInfo}=this.state;//destructuring and take out showcontactinfo \r\n    return (\r\n      <Consumer>\r\n        {\r\n            value=>{\r\n              const {dispatch}=value;\r\n            return(\r\n              <div className=\"card card-body mb-3 text-white bg-success\">\r\n              <h4>{contact.name} <i onClick={this.onshowclick}className=\"fas fa-sort-down\" style={{cursor:'pointer'}}></i>\r\n              <i className=\"fas fa-user-times\" style={{color:'white',cursor:'pointer',float:'right'}} onClick={this.onDeleteClick.bind(this,id,dispatch)}></i>\r\n              <Link to={`contact/edit/${id}`}><i style={{color:'white',cursor:'pointer',float:'right',marginRight:'1rem'}} className=\"fas fa-pencil-alt\"></i></Link>\r\n              </h4>\r\n              {showContactInfo ? (<ul className=\"list-group\">\r\n                  <li className=\"list-group-item bg-success\">Email:{contact.email}</li>\r\n                  <li className=\"list-group-item bg-success\">Phone:{contact.phone}</li>\r\n              </ul>):null}  \r\n            </div>\r\n            )\r\n          }\r\n        }\r\n      </Consumer>\r\n \r\n    )\r\n    //toggling ul using showcontactinfo set display and none\r\n  }\r\n}\r\nContact.propTypes={\r\n    contact:PropTypes.object.isRequired,\r\n}\r\nexport default Contact;","import React, { Component } from 'react'\r\nimport Contact from './Contact'\r\nimport { Consumer } from \"../../context\";//bringing in consumer\r\n\r\n class Contacts extends Component {\r\n\r\n  render() {\r\n    //use consumer\r\n      return(\r\n        <Consumer>\r\n          {\r\n            value=>{\r\n              const {contacts}=value;//pulling out contacts from state using destructuring\r\n              return(\r\n                <div>\r\n                  <h1 className=\"display-4 mb-2 jumbotron\">Contact list</h1>\r\n                {contacts.map(contact =>\r\n                    <Contact key={contact.id} contact={contact} >\r\n                    \r\n                    </Contact>  //instead of passing value by value here everything passed in contacts object in to contact component\r\n                )}\r\n              </div>//traversing contact array to loop objects\r\n              )\r\n            }\r\n          }\r\n        </Consumer>\r\n      )\r\n  }\r\n}\r\nexport default  Contacts;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\n const TextInputGroup=({\r\n     label,\r\n     name,value,type,onChange,placeholder,error\r\n })=> {\r\n  return (\r\n    <div className=\"form-group\">\r\n    <label htmlFor={name}>{label}</label>\r\n        <input onChange={onChange}\r\n                value={value} \r\n                name={name}\r\n                type={type}\r\n                className={classnames('form-control form-control-lg',{'is-invalid':error})}\r\n                placeholder={placeholder}>\r\n        </input>\r\n        {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  )\r\n}\r\nTextInputGroup.propTypes={\r\n    name:PropTypes.string.isRequired,\r\n    placeholder:PropTypes.string.isRequired,\r\n    value:PropTypes.string.isRequired,\r\n    type:PropTypes.string.isRequired,\r\n    onChange:PropTypes.func.isRequired,\r\n    label:PropTypes.string.isRequired,\r\n    error:PropTypes.string\r\n\r\n}\r\nTextInputGroup.defaultProps={\r\n    type:\"text\"\r\n}\r\nexport default TextInputGroup;","import React, { Component } from 'react'\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\"\r\nimport axios from 'axios';\r\n\r\n class AddContact extends Component {\r\n     state={\r\n         name:'',\r\n         email:'',\r\n         phone:'',\r\n         errors:{\r\n\r\n         }\r\n     }\r\n     onSubmit = async (dispatch,e) => {\r\n       e.preventDefault();\r\n       const { name,email,phone } = this.state;\r\n       //check for errors\r\n       if(name===''){\r\n         this.setState({errors:{name:'name is required'}})\r\n         return;\r\n       }\r\n       if(email===''){\r\n        this.setState({errors:{email:'email is required'}})\r\n        return;\r\n      }\r\n      if(phone===''){\r\n        this.setState({errors:{phone:'phone is required'}})\r\n        return;\r\n      }\r\n       const newContact={\r\n         name,\r\n         email,\r\n         phone\r\n       }\r\n       const res= await axios.post('https://jsonplaceholder.typicode.com/users',newContact)\r\n       dispatch({type:'ADD_CONTACT',payload:res.data})\r\n  \r\n      //  axios.post('https://jsonplaceholder.typicode.com/posts',newContact).then(\r\n      //    res =>dispatch({type:'ADD_CONTACT',payload:res.data})\r\n      //  )\r\n    \r\n       this.setState({\r\n         name:'',\r\n         email:'',\r\n         phone:\"\",\r\n         errors:{}\r\n       })\r\n       //redirect\r\n       this.props.history.push('/');\r\n     }\r\n\r\n     onChange = e => this.setState({ [e.target.name]:e.target.value })\r\n  render() {\r\n      const {name,email,phone,errors}=this.state\r\n      return(\r\n        <Consumer>\r\n          {value=>{\r\n            const {dispatch}=value;\r\n            return(\r\n            <div className=\"card-body\">\r\n              <form onSubmit={this.onSubmit.bind(this,dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"name\"\r\n                    name=\"name\"\r\n                    placeholder=\"enter name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"enter email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                 />\r\n                    <TextInputGroup\r\n                    label=\"phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"enter phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input type=\"submit\" value=\"add contact\" className=\"btn btn-primary btn-block\"></input>\r\n              </form>\r\n          </div>\r\n            )\r\n          }}\r\n        </Consumer>\r\n      )\r\n  }\r\n}\r\nexport default AddContact;","import React, { Component } from 'react'\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\"\r\nimport axios from 'axios';\r\n\r\n class EditContact extends Component {\r\n     state={\r\n         name:'',\r\n         email:'',\r\n         phone:'',\r\n         errors:{\r\n\r\n         }\r\n         \r\n     }\r\n     async componentDidMount(){\r\n         const{id}=this.props.match.params;\r\n         const res= await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n         const contact= res.data;\r\n         this.setState({\r\n             name:contact.name,\r\n             email:contact.email,\r\n             phone:contact.phone\r\n         })\r\n     }\r\n     onSubmit = async (dispatch,e) => {\r\n       e.preventDefault();\r\n       const { name,email,phone } = this.state;\r\n       //check for errors\r\n       if(name===''){\r\n         this.setState({errors:{name:'name is required'}})\r\n         return;\r\n       }\r\n       if(email===''){\r\n        this.setState({errors:{email:'email is required'}})\r\n        return;\r\n      }\r\n      if(phone===''){\r\n        this.setState({errors:{phone:'phone is required'}})\r\n        return;\r\n      }\r\n   const updatedContact ={\r\n       name,\r\n       email,\r\n       phone\r\n   }\r\n    const{id}=this.props.match.params;\r\n    const res= await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`,updatedContact);\r\n    dispatch({\r\n        type:'UPDATE_CONTACT',\r\n        payload:res.data\r\n    })\r\n       this.setState({\r\n         name:'',\r\n         email:'',\r\n         phone:\"\",\r\n         errors:{}\r\n       })\r\n       //redirect\r\n       this.props.history.push('/');\r\n     }\r\n\r\n     onChange = e => this.setState({ [e.target.name]:e.target.value })\r\n  render() {\r\n      const {name,email,phone,errors}=this.state\r\n      return(\r\n        <Consumer>\r\n          {value=>{\r\n            const {dispatch}=value;\r\n            return(\r\n                \r\n            <div className=\"card-body\">\r\n            <div className=\"card-header\">edit contact</div>\r\n              <form onSubmit={this.onSubmit.bind(this,dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"name\"\r\n                    name=\"name\"\r\n                    placeholder=\"enter name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"enter email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                 />\r\n                    <TextInputGroup\r\n                    label=\"phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"enter phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input type=\"submit\" value=\"update contact\" className=\"btn btn-primary btn-block\"></input>\r\n              </form>\r\n          </div>\r\n            )\r\n          }}\r\n        </Consumer>\r\n      )\r\n  }\r\n}\r\nexport default EditContact;","import React from 'react'\r\nimport PropTypes from 'prop-types'//importing proptypes for validation\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\n const Header = (props)=> {\r\n     const {branding} = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n        <div className=\"container\">\r\n            <a href=\"/\" className=\"navbar-brand\">{branding}</a>\r\n            <div>\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <Link  to=\"/\"className=\"nav-link\"><i className=\"fas fa-home\"></i>home</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link  to=\"/contact/add\"className=\"nav-link\"><i className=\"fas fa-plus\"></i>Add Contact</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link  to=\"/about\"className=\"nav-link\"><i className=\"fas fa-question\"></i>About</Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </nav>\r\n  )\r\n}\r\nHeader.defaultProps={\r\n    branding:'my app'//setting default prop to display\r\n}\r\nHeader.propTypes={\r\n    branding:PropTypes.string.isRequired//checking is string???????\r\n}\r\nexport default Header;","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div className=\"jumbotron\">\r\n      <h1 className=\"display-4 alert alert-danger\">404 page not found</h1>\r\n      <p className=\"lead\">sorry we coudn't find that page</p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function About() {\r\n  return (\r\n    <div className=\"jumbotron\">\r\n      <h1 className=\"display-4\">contact manager app</h1>\r\n      <p className=\"lead\">simple app to manage contacts</p>\r\n      <p className=\"text-secondary\">version 1.0.0</p>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\n\r\n class Test extends Component {\r\n    state={\r\n        title:'',\r\n        body:'',\r\n        id:'',\r\n        userId:''\r\n    };\r\n     componentDidMount(){\r\n      fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n      .then(response => response.json())\r\n      .then(data => this.setState({\r\n          title:data.title,\r\n          body:data.body,\r\n          id:data.id,\r\n          userId:data.userId\r\n      }))\r\n    }\r\n  render() {\r\n    const{title,body,id,userId}=this.state;\r\n    return (\r\n      <div>\r\n       <h1>{title}</h1> \r\n       <p>{body}</p>\r\n       <p>{id}</p>\r\n       <p>{userId}</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Test;","import React, { Component } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Contacts from './components/contact/Contacts';\nimport AddContact from './components/contact/AddContact';\nimport EditContact from './components/contact/EditContact';\nimport Header from './components/layout/Header';\nimport NotFound from './components/pages/NotFound';\nimport About from './components/pages/About';\nimport Test from './components/test/Test';\nimport {Provider} from './context'\nimport {HashRouter as Router ,Route,Switch } from 'react-router-dom'\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n          <Router>\n            <div className=\"App\">\n            <script src=\"https://unpkg.com/axios/dist/axios.min.js\"></script>\n            <Header branding=\"contact manager\"/>\n              <div className=\"container\">\n                <Switch>\n                  <Route exact path=\"/\" component={Contacts}></Route>\n                  <Route exact path=\"/contact/add\" component={AddContact}></Route>\n                  <Route exact path=\"/contact/edit/:id\" component={EditContact}></Route>\n                  <Route exact path=\"/about\" component={About}></Route>\n                  <Route exact path=\"/test\" component={Test}></Route>\n                  <Route component={NotFound}></Route>\n                </Switch>\n              </div>  \n            </div>\n        </Router>\n      </Provider>\n      \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}